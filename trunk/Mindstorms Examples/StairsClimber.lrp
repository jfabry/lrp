;;; A stairs climber building using the MindStorm expansion set
;;; Use ontime transition to estimate the second step of the climbing
;;; Watch example in: 

(var ev3 := [LRPEV3Bridge instance])
(var backWheelsSpeed := [-50])
(var frontWheelsSpeed := [-50])
(var climbSpeed := [-50])
(var startGyro := [0])
(var deltaGyro := [4])
(machine Stair
  (state forward
    (onentry [
      ev3 motorA startAtSpeed: backWheelsSpeed.
      ev3 motorB startAtSpeed: frontWheelsSpeed.
      startGyro := ev3 sensor2 read.
      ]
    )
    (onexit [
      LRPEV3Bridge fullStop.
      ]
    )
  )
  
  (state climb
    (onentry [
      ev3 motorD startAtSpeed: climbSpeed.
      ev3 motorB startAtSpeed: frontWheelsSpeed.
      ]
    )
    (onexit [
      LRPEV3Bridge fullStop.
      ]
    )
  )
  
  (state forward2
    (onentry [
      ev3 motorA startAtSpeed: backWheelsSpeed.
      ev3 motorB startAtSpeed: frontWheelsSpeed.
      ]
    )
  )
  
  (state climb2
    (onentry [
      ev3 motorD startAtSpeed: climbSpeed negated.
      ]
    )
    (onexit [
      LRPEV3Bridge fullStop 
      ]
    )
  )
  
  (state stop
    (onentry [LRPEV3Bridge fullStop])
  )
  
  (on incline forward -> climb incline)
  (on finishClimb climb -> forward2 finishClimb)
  (event finishClimb [ev3 sensor3 read == 1])
  (event incline [ev3 sensor2 read > (deltaGyro + startGyro)])
  
  (ontime 3000 forward2 -> climb2 for2)
  (ontime 6000 climb2 -> forward loop)
)
(spawn Stair forward)